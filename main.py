from playwright.sync_api import sync_playwright, Playwright
import google.generativeai as genai
import os
from dotenv import load_dotenv
from fake_useragent import UserAgent
import re


# Load environment variables
load_dotenv()

# Set up user agent
user_agent = UserAgent()

# Set up Google API key
google_api_key = os.getenv('GOOGLE_API_KEY')
genai.configure(api_key=google_api_key)

# Set up generative model
model = genai.GenerativeModel('gemini-pro')


def extract_quote_content(text):
    match = re.search(r'\[quote[^\]]*](.*?)\[/quote\]', text, re.DOTALL)
    return match.group(1).strip() if match else ''


def get_gemini_response(input):
    prompt = """You are a charismatic and witty Nairaland person. Your mission is to engage users with lively and friendly conversations, infusing humor, Nigerian culture, and slangs. Keep your responses less than 50 words and always include emojis to add a fun touch. Adapt to the conversation's tone, ask questions if necessary, and seamlessly flow with the dialogue. Your goal is to entertain, make users feel at ease, and respond naturally to any input.

    Reply to this person: """

    response = model.generate_content(prompt + input, safety_settings=[
        {"category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_NONE"},
        {"category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_NONE"},
        {"category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_NONE"},
        {"category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_NONE"},
    ])

    return response


def login_nairaland(page):
    page.goto("https://nairaland.com")
    login = page.query_selector('//a[@href="/login"]')
    login.click()
    input_username_selector = page.query_selector('//input[@name="login"]')
    input_username_selector.type("myai42545")
    input_password_selector = page.query_selector('//input[@name="password"]')
    input_password_selector.type("myai123")
    submit_selector = page.query_selector('//input[@value="Login"]')
    submit_selector.click()
    # Wait for 10 seconds
    page.wait_for_timeout(10000)


def get_trending_urls(page):
    page.goto('https://www.nairaland.com/trending')
    trending_topics_selector = page.query_selector_all('//table[2]/tbody/tr')
    full_url_list = []
    for item in trending_topics_selector:
        link = item.query_selector_all('//b[2]')[0].query_selector_all('a')[0].get_attribute('href')
        full_url_list.append(f'https://www.nairaland.com{link}')
    return full_url_list


def process_nairaland_urls(page, urls):
    count = 0
    for url in urls:
        try:
            count += 1
            page.goto(url)
            page.click('text="Quote"')
            textarea_selector = 'textarea#body'
            textarea = page.locator(textarea_selector)
            current_text = textarea.evaluate('(el) => el.value')
            quote_content = extract_quote_content(current_text)
            if quote_content:
                response = get_gemini_response(quote_content)
                try:
                    quote_position = current_text.find("[/quote]")
                    if quote_position != -1:
                        cursor_position = quote_position + len("[/quote]")
                        textarea.evaluate(f'(el, pos) => el.setSelectionRange(pos, pos)', cursor_position)
                        output_text = f"""{response.text}
                                
                                 [i]This reply was generated by AI[/i]
                            """
                        textarea.type(output_text)
                        print(f"No: {count} {output_text}")

                        # Submit response
                        page.query_selector('//input[@value="Submit"]').click()
                except ValueError:
                    print(response.prompt_feedback)
        except Exception as e:
            print(f"An error occurred for URL: {str(e)}")
            continue


def run(playwright: Playwright):
    chromium = playwright.chromium
    browser = chromium.launch(headless=False)
    page = browser.new_page()
    page.set_extra_http_headers({'User-Agent': user_agent.chrome, 'Accept-Language': 'en-US,en;q=0.9'})

    login_nairaland(page)
    trending_urls = get_trending_urls(page)
    process_nairaland_urls(page, trending_urls)

    while True:
        page.wait_for_timeout(10000)


with sync_playwright() as playwright:
    run(playwright)
